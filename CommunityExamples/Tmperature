// Définir le Maroc 

var Maroc = ee.FeatureCollection("users/mahyouh/MAROC_COV_AMS");
 
 // Définir un centre
 
 Map.setCenter(-6, 33, 5) 

 // Récuperation des images LST La moyenne générée directement à partir de MODIS (MOD13Q1) 

var start_DoY = 30;

// Long term average can be generated directly from the pre-calculated LST

var MODIS_LST = ee.ImageCollection("MODIS/006/MOD11A2")
.filter(ee.Filter.dayOfYear(start_DoY, start_DoY + 90))
 .filterDate('2000-01-01', '2019-04-01')
 .filterBounds (Maroc);
 
// #############################################################################

// Scale to Kelvin and convert to Celsius, set image acquisition time.
var modLSTc = MODIS_LST.map(function(img) {
  return img
    .multiply(0.02)
    .subtract(273.15)
    .copyProperties(img, ['system:time_start']);
});


//#############################################################################
// Select only the 1km day and night LST data band.

var modLSTday = modLSTc.select('LST_Day_1km');
var modLSTnight = modLSTc.select('LST_Night_1km'); 
 
// ############################################################################

var stack_LST = modLSTday.merge(modLSTnight)


// ##########################  LTA  #####################################

// Calculate day mean, min and max temperature for Maroc.
var LSTmin_d = modLSTday.min().clip(Maroc);
var LSTmean_d = modLSTday.median().clip(Maroc);
var LSTmax_d = modLSTday.max().clip(Maroc);

// Calculate Night min and max temperature for Maroc.

var LSTmin_n  = modLSTnight.min().clip(Maroc);
var LSTmean_n  = modLSTnight.median().clip(Maroc);
var LSTmin_n  = modLSTnight.max().clip(Maroc);

 // ##########################   Reference  #####################################

////sélection  de LST pour 2017 (année de référence)
var reference_d= //ee.ImageCollection("MODIS/006/MOD11A2")
 modLSTday.filterDate('2017-02-01', '2017-04-01')
 .filterBounds (Maroc);
 
var reference_n = //ee.ImageCollection("MODIS/006/MOD11A2")
 modLSTnight.filterDate('2017-02-01', '2017-04-01')
 .filterBounds (Maroc);  
 
 // Calculate day mean, min and max temperature for Maroc.
var LSTmin_dr = reference_d.min().clip(Maroc);
var LSTmean_dr = reference_d.median().clip(Maroc);
var LSTmax_dr =reference_d.max().clip(Maroc);

// Calculate Night min and max temperature for Maroc.

var LSTmin_nr  = reference_n.min().clip(Maroc);
var LSTmean_nr  = reference_n.median().clip(Maroc);
var LSTmax_nr  = reference_n.max().clip(Maroc);

 // ##########################   Actual  #####################################

////sélection  de LST pour 2019 (année courante)
var actual_d= //ee.ImageCollection("MODIS/006/MOD11A2")
 modLSTday.filterDate('2019-02-01', '2019-04-01')
 .filterBounds (Maroc);
 
var actual_n = //ee.ImageCollection("MODIS/006/MOD11A2")
 modLSTnight.filterDate('2019-02-01', '2019-04-01')
 .filterBounds (Maroc);  
 
 // Calculate day mean, min and max temperature for Maroc.
var LSTmin_da = actual_d.min().clip(Maroc);
var LSTmean_da = actual_d.median().clip(Maroc);
var LSTmax_da = actual_d.max().clip(Maroc);

// Calculate Night min and max temperature for Maroc.

var LSTmin_na  = actual_n.min().clip(Maroc);
var LSTmean_na  = actual_n.median().clip(Maroc);
var LSTmax_na = actual_n.max().clip(Maroc);

// ##########################  seuil #####################################    

//Classer LST en seuils allant de moins -5 à plus 40

var thresholds = ee.Image([-5, 0,5,10,20,30, 40]);


//###############  LTA  #############
var LSTmin_dl = LSTmin_d.gt(thresholds).reduce('sum');
var LSTmean_dl = LSTmean_d.gt(thresholds).reduce('sum');
var LSTmax_dl = LSTmax_d.gt(thresholds).reduce('sum');
var LSTmin_nl = LSTmin_d.gt(thresholds).reduce('sum');
var LSTmean_nl = LSTmean_d.gt(thresholds).reduce('sum');
var LSTmax_nl = LSTmax_d.gt(thresholds).reduce('sum');

//###############  REF  #############
var LSTmin_dr1 = LSTmin_dr.gt(thresholds).reduce('sum');
var LSTmean_dr1 = LSTmean_dr.gt(thresholds).reduce('sum');
var LSTmax_dr1 = LSTmax_dr.gt(thresholds).reduce('sum');
var LSTmin_nr1 = LSTmin_nr.gt(thresholds).reduce('sum');
var LSTmean_nr1 = LSTmean_nr.gt(thresholds).reduce('sum');
var LSTmax_nr1 = LSTmax_nr.gt(thresholds).reduce('sum');

//###############  ACTUAL  #############
var LSTmin_da1 = LSTmin_da.gt(thresholds).reduce('sum');
var LSTmean_da1 = LSTmean_da.gt(thresholds).reduce('sum');
var LSTmax_da1 = LSTmax_da.gt(thresholds).reduce('sum');
var LSTmin_na1 = LSTmin_na.gt(thresholds).reduce('sum');
var LSTmean_na1 = LSTmean_na.gt(thresholds).reduce('sum');
var LSTmax_na1 = LSTmax_na.gt(thresholds).reduce('sum');


    

var palette = {min: 0, max: 7, palette: ["fc27ff", "0000ff","32cd32","ffff00","cabe2f","ffb443", "ff0000"]};


// Mapping mean, min and max temperature.

////////////////////////////LTA ///////////////////////////////////////////////
//////////////////////////////Day//////////////////////////////////////////////
Map.addLayer(LSTmin_dl, palette, 'Day_min temperature', false);

Map.addLayer(LSTmean_dl, palette,'Day_mean temperature', false);

Map.addLayer(LSTmax_dl  , palette,  'Day_max temperature', false);
  
//////////////////////////////Night//////////////////////////////////////////////
Map.addLayer(LSTmin_nl , palette,  'Night_min temperature', false);

Map.addLayer(LSTmean_nl  , palette ,  'Night_mean temperature', false);
  
Map.addLayer(LSTmax_nl  , palette ,  'Night_max temperature', false);

///////////////////////////REFERENCE///////////////////////////////////////////////

//////////////////////////////Day//////////////////////////////////////////////
Map.addLayer(LSTmin_dr1, palette, 'Day_min T_ref', false);

Map.addLayer(LSTmean_dr1, palette,'Day_mean T_ref', false);

Map.addLayer(LSTmax_dr1  , palette,  'Day_max T_ref', false);
  
//////////////////////////////Night//////////////////////////////////////////////
Map.addLayer(LSTmin_nr1 , palette,  'Night_min T_ref', false);

Map.addLayer(LSTmean_nr1  , palette ,  'Night_mean T_ref', false);
  
Map.addLayer(LSTmax_nr1  , palette ,  'Night_max T_ref', false);


///////////////////////////Actual///////////////////////////////////////////////

//////////////////////////////Day//////////////////////////////////////////////
Map.addLayer(LSTmin_da1, palette, 'Day_min T_Act', false);

Map.addLayer(LSTmean_da1, palette,'Day_mean T_Act', false);

Map.addLayer(LSTmax_da1  , palette,  'Day_max T_Act', false);
  
//////////////////////////////Night//////////////////////////////////////////////
Map.addLayer(LSTmin_na1 , palette,  'Night_min T_Act', false);

Map.addLayer(LSTmean_na1  , palette ,  'Night_mean T_Act', false);
  
Map.addLayer(LSTmax_na1  , palette ,  'Night_max T_Act', false);



//Légende

// set position of panel
var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});

// Create legend title
var legendTitle = ui.Label({
  value: 'Température °C',
  style: {
    fontWeight: 'bold',
    fontSize: '18px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});

// Add the title to the panel
legend.add(legendTitle);

// Creates and styles 1 row of the legend.
var makeRow = function(color, name) {

      // Create the label that is actually the colored box.
      var colorBox = ui.Label({
        style: {
          backgroundColor: '#' + color,
          // Use padding to give the box height and width.
          padding: '8px',
          margin: '0 0 4px 0'
        }
      });

      // Create the label filled with the description text.
      var description = ui.Label({
        value: name,
        style: {margin: '0 0 4px 6px'}
      });

      // return the panel
      return ui.Panel({
        widgets: [colorBox, description],
        layout: ui.Panel.Layout.Flow('horizontal')
      });
};

//  Palette with the colors
var palette =["fc27ff", "0000ff","32cd32","ffff00","cabe2f","ffb443", "ff0000"];

// name of the legend
var names = ['-5', '0','5','10','20','30', '40'];

// Add color and and names
for (var i = 0; i <7; i++) {
  legend.add(makeRow(palette[i], names[i]));
  }  

// add legend to map 
Map.add(legend);




































