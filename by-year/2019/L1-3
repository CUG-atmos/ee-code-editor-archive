/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: #d63000 */ee.Geometry.Polygon(
        [[[30.18745093218422, 51.350799696741404],
          [30.188137577692032, 51.36709290020106],
          [30.17474799028969, 51.39987611559026],
          [30.12427954546547, 51.418292973638856],
          [30.054928349176407, 51.393235661731374],
          [30.130116032281876, 51.351442959381615]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var bounds = ee.Geometry(Map.getBounds(true))

Map.setOptions('HYBRID')

var l11 = ee.ImageCollection("LANDSAT/LM01/C01/T1").filterBounds(bounds.centroid(1))
var l12 = ee.ImageCollection("LANDSAT/LM01/C01/T2").filterBounds(bounds.centroid(1))
var l21 = ee.ImageCollection("LANDSAT/LM02/C01/T1").filterBounds(bounds.centroid(1))
var l22 = ee.ImageCollection("LANDSAT/LM02/C01/T2").filterBounds(bounds.centroid(1))
var l31 = ee.ImageCollection("LANDSAT/LM03/C01/T1").filterBounds(bounds.centroid(1))
var l32 = ee.ImageCollection("LANDSAT/LM03/C01/T2").filterBounds(bounds.centroid(1))

var images = l11
  .merge(l12)
  .merge(l21)
  .merge(l22)
  .merge(l31)
  .merge(l32)

images = images.map(function(i) {
  return ee.Algorithms.Landsat.TOA(i)
}).select(['B6', 'B5', 'B4'], ['nir', 'red', 'green'])


var images2 = ee.ImageCollection('LANDSAT/LT04/C01/T1_TOA').select(['B4', 'B3', 'B2'], ['nir', 'red', 'green']).filterBounds(bounds.centroid(1))
var images3 = ee.ImageCollection('LANDSAT/LT04/C01/T2_TOA').select(['B4', 'B3', 'B2'], ['nir', 'red', 'green']).filterBounds(bounds.centroid(1))
var images4 = ee.ImageCollection('LANDSAT/LT05/C01/T1_TOA').select(['B4', 'B3', 'B2'], ['nir', 'red', 'green']).filterBounds(bounds.centroid(1))
var images5 = ee.ImageCollection('LANDSAT/LT05/C01/T2_TOA').select(['B4', 'B3', 'B2'], ['nir', 'red', 'green']).filterBounds(bounds.centroid(1))


images = images.merge(images2).merge(images3).merge(images4).merge(images5)
  .filterDate('1960-01-01', '2000-01-01')

print(images.size())

// LANDSAT/LT05/C01/T1_TOA 
// LANDSAT/LT05/C01/T2_TOA 
// LANDSAT/LE07/C01/T1_TOA 
// LANDSAT/LE07/C01/T2_TOA 

var assets = require('users/gena/packages:assets')
images = assets.getMostlyCleanImages(images, geometry, {
  cloudFrequencyThresholdDelta: 0.15
})

print(images.size())

images = images.sort('system:time_start')

images = images.map(function(i) { return i.set({ label: i.date().format() }) })

var animation = require('users/gena/packages:animation')
animation.animate(images, { vis: { bands: ['red', 'nir', 'green'], min: 0.05, max: 0.4, gamma: 1.5 }, label: 'label', maxFrames: 150 })
