Map.addLayer(ee.Image(1), {palette:['000000']}, 'background', true, 0.5)

var scale = Map.getScale()
var radius = 100
var region = ee.Geometry(Map.getCenter()).buffer(scale*radius)

function getScatterPlot(x, y) {
  var rows = ee.List(x).zip(ee.List(y)).map(function(pair) {
    pair = ee.List(pair)
    return {c: [{v: pair.get(0)}, {v: pair.get(1)}]}
  }).getInfo()

  var cols = [
      {id: 'x', label: 'x', type: 'number'},
      {id: 'y', label: 'y', type: 'number'}
  ];

  return ui.Chart({cols: cols, rows: rows}, 'ScatterChart').setOptions({pointSize: 1, width: 400, height: 400})
}

function uniform(count) {
   return Array.apply(null, Array(count)).map(function() {
        return Math.round(Math.random() * 10000) / 10000;
    });
}

function normal(x, mean, sigma) {
  var s2 = 2*sigma*sigma
  
  return Math.exp(-(x-mean)*(x-mean)/s2) / Math.sqrt(Math.PI*s2)
}


var v1 = uniform(1000)
var v2 = uniform(1000)

var r = v1.map(function(v) { return Math.sqrt(-2*Math.log(v)) })
var θ = v2.map(function(v) { return 2*Math.PI*v })
var values = ee.List(r).zip(ee.List(θ))

var x = values.map(function(pair) {
  pair = ee.List(pair)
  
  return ee.Number(pair.get(0)).multiply(ee.Number(pair.get(1)).cos())
})

var y = values.map(function(pair) {
  pair = ee.List(pair)
  
  return ee.Number(pair.get(0)).multiply(ee.Number(pair.get(1)).sin())
})

print(getScatterPlot(x, y))