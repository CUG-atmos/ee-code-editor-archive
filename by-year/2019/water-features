var gl = require('users/gena/packages:gl')

var s2 = ee.ImageCollection('COPERNICUS/S2')

var image = ee.Image(s2.filterBounds(Map.getCenter()).toList(1, 1).get(0)).resample('bicubic').divide(10000)
Map.addLayer(image, { min: 0, max: 0.25, bands: ['B4', 'B3', 'B2'] })

var region = ee.Geometry(Map.getBounds(true))
var scale = Map.getScale()
print(scale)
var dark = image.reduceRegion(ee.Reducer.percentile([0]), region, scale)
print(dark)

var darkImage = ee.Image.constant(image.bandNames().map(function(b) { return dark.get(b) })).rename(image.bandNames())
image = image.subtract(darkImage)
Map.addLayer(image, { min: 0, max: 0.25, bands: ['B4', 'B3', 'B2'] })

Map.addLayer(image.log(), { min: -5, max: -3, bands: ['B4', 'B3', 'B2'] })

var edges = ee.Algorithms.CannyEdgeDetector(image.log().select('B3'), 0.05, 4).unitScale(0, 0.5)

Map.addLayer(edges.mask(edges), { palette: ['ff0000'] })


var l = image.log().convolve(ee.Kernel.gaussian(4, 2)).convolve(ee.Kernel.laplacian8())
Map.addLayer(l, { min: -0.5, max: 0.5, bands: ['B4', 'B3', 'B2'] })


var water = image.normalizedDifference(['B3', 'B12'])
//var water = gl.smoothstep(-0.15, 0.3, water)
Map.addLayer(water, { min: -0.1, max: 0.2})

var water = image.normalizedDifference(['B3', 'B8'])
//var water = gl.smoothstep(-0.15, 0.3, water)
Map.addLayer(water, { min: 0, max: 0.5})
