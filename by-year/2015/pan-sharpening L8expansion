// pan-sharpening L8expansion
//

var input = ee.Image("LANDSAT/LC8_L1T_TOA/LC81890282014197LGN00");
var xs = input.select(['B5','B6', 'B4', 'B3']);
//var xs = input.select(['B4','B3', 'B2']);

//var input = ee.Image("LANDSAT/LE7_L1T_TOA/LE71740431999219EDC00");
//var xs = input.select(['B4','B3', 'B2']);

var pan = input.select('B8');
console.log(xs.getInfo());
console.log(pan.getInfo());

// Upscale XS to 4 times original resolution
var xs_crs = xs.getInfo().bands[0].crs;
var xs_res = xs.getInfo().bands[0].crs_transform[0];

var xs_upscale = xs.reproject(xs_crs, null, xs_res/4);

// Upscale XS to 2 times original resolution
var p_crs = pan.getInfo().bands[0].crs;
var p_res = pan.getInfo().bands[0].crs_transform[0];

var p_upscale = pan.reproject(p_crs, null, p_res/2);

var wght = 1.0/16.0;

var meanKernel = ee.Kernel.fixed(4, 4,

                         [[wght, wght, wght, wght],

                          [wght, wght, wght, wght],

                          [wght, wght, wght, wght],

                          [wght, wght, wght, wght]]);
// try this

var pconv = p_upscale.convolve(meanKernel);


/*
var wght = 1.0/4.0;

var meanKernel = ee.Kernel.fixed(2, 2,

                         [[wght, wght],

                          [wght, wght]]);
var xs_upscale = xs_upscale.convolve(meanKernel);
*/
                          
var psh = xs_upscale.multiply(p_upscale.divide(pconv));

console.log(psh.getInfo());
addToMap(xs, {min: [0.0, 0.0, 0.0], max: [0.8, 0.5, 0.3] }, 'original');
addToMap(pan, {min: 0.0, max: 0.3}, 'pan');
addToMap(pconv, {min: 0.0, max: 0.3}, 'pconv');
addToMap(psh, {min: [0.0, 0.0, 0.0], max: [0.8, 0.5, 0.3]}, 'upscaled');


// the rest is about NDWI and HSV

Map.addLayer(xs.expression("(b('B3')-b('B6'))/(b('B3')+b('B6'))"), {min:-0.5, max:0.5}, 'NDWI', false);
Map.addLayer(psh.expression("(b('B3')-b('B6'))/(b('B3')+b('B6'))"), {min:-0.5, max:0.5}, 'NDWI (upscaled)', false);

Map.centerObject(xs, 15);

var rgb = xs.unitScale(0, 1);
var pan = pan.unitScale(0, 1);
var hsv  = rgb.select([0,1,2]).rgbtohsv();
var intensity = pan;
var huesat = hsv.select('hue', 'saturation');
var upres = ee.Image.cat(huesat, intensity).hsvtorgb();
Map.addLayer(upres, {min: [0.0, 0.0, 0.0], max: [0.8, 0.5, 0.3], gamma:1.6}, 'upscaled (HSV)', false);










// Upscale XS to 4 times original resolution
/*var i1 = ee.Image(images.first());
var pan = i1.select('pan');

var xs_crs = i1.getInfo().bands[0].crs;
var xs_res = i1.getInfo().bands[0].crs_transform[0];

// Upscale XS to 2 times original resolution
var p_crs = pan.getInfo().bands[0].crs;
var p_res = pan.getInfo().bands[0].crs_transform[0];
*/
var upscale = function(image) {
  var pan = image.select('pan');
  
  var xs_upscale = image.reproject(xs_crs, null, xs_res/4);

  var p_upscale = pan.reproject(p_crs, null, p_res/2);

  var wght = 1.0/16.0;

  var meanKernel = ee.Kernel.fixed(4, 4,
                         [[wght, wght, wght, wght],
                          [wght, wght, wght, wght],
                          [wght, wght, wght, wght],
                          [wght, wght, wght, wght]]);

  var pconv = p_upscale.convolve(meanKernel);


/*
var wght = 1.0/4.0;
var meanKernel = ee.Kernel.fixed(2, 2,
                         [[wght, wght],
                          [wght, wght]]);
var xs_upscale = xs_upscale.convolve(meanKernel);
*/
                          
  return xs_upscale.multiply(p_upscale.divide(pconv));
}

//var water = images_sng.map(upscale).reduce(ee.Reducer.intervalMean(p, p+1)).clip(aoi).normalizedDifference(['swir1_mean','green_mean']).gt(0);
// Map.addLayer(water.mask(water.not()), {min:0, max:1, palette: '0000FF'}, 'L8 pmndwi('+p+'%) > 0', false);
